# Plan de Trabajo - Futpedia

A continuación se presenta el plan de trabajo actualizado con la estructura que permitirá ir “tildando” (✔) los avances de manera progresiva. El repositorio local se denominará “futpedia” y la base de datos se encuentra en el archivo “archivo” (con las tablas establecidas).

---

## 1. Definición y Organización del Proyecto

- [=]  (1.1) Definir el alcance detallado del repositorio de resultados (qué ligas y torneos se incluirán inicialmente).
- [= ] (1.2) Formalizar la arquitectura orientada a web (desktop/móvil) y la futura API REST.
- [ ]  (1.3)  Seleccionar los idiomas disponibles: ES (principal), EN, FR, PT
- [  ] (1.4) Definir roles:
  - [  ] SuperAdministrador.
  - [  ] SeniorAdministrador (IA).
  - [ ] Editores.
  -  ] Usuarios/Visitantes.
  • SuperAdministrador (tú):
– Control total de la plataforma con capacidad para:
1) Crear, editar o eliminar cualquier dato de la base (confederaciones, países, competiciones, equipos, partidos, usuarios).
2) Aprobar y/o rechazar contribuciones de la cola de moderación.
3) Recibir notificaciones cuando los editores crean nuevas competiciones o hacen cambios relevantes fuera del flujo normal (p.ej. torneos críticos).
4) Gestionar la configuración global de la aplicación (ajustes de idioma, mantenimiento, etc.).

• SeniorAdministrador (Asistente Virtual / IA):
– Encargado de revisar automáticamente las contribuciones que llegan de usuarios registrados o anónimos.
– Aplica reglas de validación, comprueba coherencia de datos (fechas, marcadores, duplicados, etc.) y decide:
1) Aprobar automáticamente la contribución si cumple todas las validaciones.
2) Rechazarla si encuentra errores claros (informando al usuario, si procede).
3) Marcarla para “revisión humana” (editores o SuperAdministrador) en caso de dudas.

• Editores (asignados por país/competición):
– Responsables de supervisar la información y gestionar competiciones dentro de su ámbito (por ejemplo, editor de Francia, editor de Champions League).
– Pueden:
1) Crear y/o editar ligas, equipos, partidos, resultados en los países o torneos que tienen asignados.
2) Revisar contribuciones que el SeniorAdministrador deje marcadas como “requiere intervención humana”.
– Notifican al SuperAdministrador tras crear nuevas competiciones, para que él también esté al tanto de la evolución.

• Usuarios/Visitantes:
– Pueden consultar datos públicos (resultados, clasificaciones, historiales).
– Si se registran, pueden enviar aportes de nuevos resultados, correcciones o inclusiones de ligas/tornéos a la cola de moderación.
– Sus contribuciones pasan automáticamente por el filtro del SeniorAdministrador (IA). Si procede, terminan en manos de algún editor o del SuperAdministrador para aprobación final.

En conjunto, este modelo de roles garantiza un flujo de moderación escalonado y eficiente, donde la IA filtra y agiliza la mayor parte de solicitudes, dejando procesos avanzados o dudosos en manos de editores y el control fundamental en manos del SuperAdministrador.


## 2. Entorno de Desarrollo

- [ ] **Servidor (LAMP o equivalente)**  
  - [] Configurar PHP (versión recomendada, extensiones, etc.).  
  - [ ] Configurar MySQL/MariaDB (creación de usuario, base de datos).  
  - [ ] Ajustar parámetros para multilenguaje y despliegue móvil.

- [ ] **Estructura de Carpetas y Archivos**  
  - [ ] /public_html para documentos públicos (HTML, CSS, JS).  
  - [ ] /admin para panel de administración.  
  - [ ] /api para endpoints REST (inicialmente básicos).  
  - [ ] /includes o /core para lógica compartida (conexiones, validaciones...).  
  - [ ] /assets para recursos estáticos (CSS, JS, imágenes).  
  - [ ] /languages para archivos ES, EN, FR, PT.

---

## 3. Modelado de Datos y Configuración de la Base de Datos

- [ ] **Tablas Principales**  
  - [ ] Verificar existencia o creación de:
    - confederaciones  
    - paises  
    - regiones  
    - competiciones  
    - equipos  
    - partidos  
    - usuarios (roles, puntos, estado)  
    - contribuciones (cola de moderación)  
    - logs (si corresponde)
- [ ] Garantizar que las tablas existentes de “archivo” no se modifiquen de forma disruptiva.
- [ ] Añadir campos para multilenguaje (ej. “nombre_en”, “nombre_fr”).
- [ ] Crear índices para acelerar búsquedas (especialmente en consultas para web móvil).

---

## 4. Diseño de Roles y Flujo de Contribuciones

- [ ] **Registro e Inicio de Sesión**  
  - [ ] Implementar verificación de email.  
  - [ ] Distinguir roles de usuario.  
- [ ] **Flujo de Contribuciones**  
  - [ ] Usuario/Visitante envía datos (partido, resultado...).  
  - [ ] SeniorAdministrador (IA) evalúa la contribución (aprobar/rechazar/escala).  
  - [ ] Editores/SuperAdministrador revisan opciones escaladas.
- [ ] **Asignación de Editores**  
  - [ ] Configurar en BD la relación editor <-> país, liga o zona.

---

## 5. Estructura de la Aplicación (Web Escritorio, Web Móvil y Futuras Apps)

### 5a. Frontend Escritorio
- [ ] Página principal (buscadores, últimas actualizaciones, destacados).
- [ ] Detalles de competiciones, equipos, partidos y formularios de contribución.
- [ ] Selector de idioma (ES, EN, FR, PT).

### 5b. Frontend Móvil
- [ ] Diseño responsive o subdominio “m.”.
- [ ] Menús ligeros, formularios adaptados.
- [ ] Optimizar rendimiento y datos.

### 5c. Panel de Administración
- [ ] Sección /admin con acceso restringido.
- [ ] CRUD de confederaciones, países, competiciones, equipos, partidos.
- [ ] Moderación de contribuciones.
- [ ] Gestión de usuarios y roles.

### 5d. API para Futura App Nativa
- [ ] Rutas en /api (p. ej. /api/v1/competitions, /api/v1/matches).
- [ ] Autenticación (API Keys, tokens).
- [ ] Respuestas JSON con soporte de idiomas.
- [ ] Implementar rate limiting.

---

## 6. Implementación Multilingüe

- [ ] Idioma principal: ES.
- [ ] Archivos de recursos: ES, EN, FR, PT.
- [ ] Ajustar plantillas para cargar cadenas según selección del usuario.
- [ ] Añadir parámetros de locale para fechas/números.
- [ ] Extender bases de datos para almacenar información en varios idiomas.

---

## 7. Fases de Desarrollo

### 7a. Fase Inicial (Infraestructura y BD)
- [ ] Configurar entorno (servidor y BD en local).
- [ ] Crear tablas faltantes (usuarios, contribuciones).
- [ ] Definir conexión PDO, CSRF, validaciones.

### 7b. Fase de Sistema de Usuarios y Multilenguaje
- [ ] Registrar/Login con verificación de email.
- [ ] Roles.
- [ ] Carga de archivos de idioma.
- [ ] Plantillas base para escritorio y móvil.

### 7c. Fase de Moderación (SeniorAdministrador IA)
- [ ] Cola de contribuciones.
- [ ] Reglas iniciales del asistente virtual (detectar incoherencias, etc.).
- [ ] Cron job o script de procesamiento periódico.
- [ ] Interfaz admin de moderación.

### 7d. Fase de API REST para la App
- [ ] Endpoints básicos (/api/v1/...). 
- [ ] Manejo de tokens y seguridad.
- [ ] Documentar con ejemplos (JSON).
- [ ] Versión inicial (v1).

### 7e. Fase de Optimización y Extensión
- [ ] Mejorar rendimiento (cachés, índices, minificación de JS/CSS).
- [ ] SEO y multilengües (hreflang, sitemaps).
- [ ] Posible integración de foros/comunidad.
- [ ] Analíticas de aportes, revisiones y volumen de datos.

---

## 8. Seguridad y Rendimiento

- [ ] Validaciones (evitar XSS, SQLi).
- [ ] Gestión sólida de sesiones (cookies seguras, regeneración de ID).
- [ ] Minimización de recursos (CSS/JS).
- [ ] Caching (Opcache, CDN, memcached si aplica).

---

## 9. Lanzamiento, Mantenimiento y Evolución

- [ ] Pruebas en entorno local/DEV.
- [ ] Ajustes finales (responsive, layout, traducciones).
- [ ] Lanzamiento oficial (monitorizar usuarios, feedback).
- [ ] Desarrollo de la App nativa (Android/iOS) cuando el API esté listo.
- [ ] Mantenimiento continuo:
  - [ ] Corrección de bugs.
  - [ ] Mejoras en IA.
  - [ ] Optimización de la estructura de datos.

---

### Cómo usar esta Checklist
1. Usa este documento como referencia del estado de cada tarea.  
2. Marca con ✔ (o cualquier símbolo) cuando completes cada paso.  
3. Agrega nuevos puntos en la sección correspondiente si surgen necesidades adicionales.  

---
