# Plan General del Proyecto: Futpedia

**Repositorio:** [jmfr65/futpedia](https://github.com/jmfr65/futpedia)
**Fecha de Última Actualización:** 2025-05-28 (Actualizar esta fecha al subir)

## Visión General
Futpedia será una aplicación web para gestionar y mostrar información relacionada con el fútbol, incluyendo noticias, equipos, jugadores, resultados, y más. Contará con un sistema de usuarios con diferentes roles y un panel de administración para la gestión de contenidos.

## Fases del Proyecto y Tareas

### Fase 0: Organización y Base de la Web

**0.0. Preparativos Iniciales**

-   [x] Configurar el entorno de desarrollo local (servidor web como Apache/Nginx, PHP, MySQL/MariaDB). (Asumo que WAMP64 cumple esto)
-   [x] Inicializar un repositorio Git para el control de versiones del proyecto.
-   [ ] Definir y documentar las convenciones de codificación (PHP, JS, CSS, SQL). (No lo hemos hecho formalmente)
-   [ ] Crear un archivo README.md inicial con la descripción del proyecto y enlaces a la documentación (este plan). (Lo harás ahora)

**0.1. Estructura de Carpetas del Proyecto**

-   [x] Crear la estructura de carpetas base según lo definido:
    -   `/public_html` (o raíz del dominio, ej. htdocs, www) -> `public` en nuestro caso.
    -   `index.php` (Punto de entrada principal) -> `public/index.php`
    -   [ ] `.htaccess` (Si se usa Apache, para reescritura de URLs amigables y seguridad). (No implementado aún)
    -   [ ] `/admin` (Panel de administración) (Carpeta no creada aún)
        -   [ ] `index.php` (Punto de entrada del panel de admin)
    -   `/includes` (Funciones, conexión a BD, helpers, lógica de negocio)
        -   [x] `config.php` (Configuraciones generales, rutas, etc. NO credenciales de BD).
        -   [ ] `db_config.php` (Credenciales de BD - COLOCAR FUERA DEL DOCUMENT ROOT SI ES POSIBLE). (Credenciales actualmente en `config.php`)
        -   [x] `database.php` (Clase/funciones para la conexión PDO y operaciones comunes de BD).
        -   [x] `functions.php` (Funciones globales de utilidad). (Parcialmente, algunas funciones están aquí)
        -   [x] `session.php` (Manejo de sesiones). (Funciones de sesión en `config.php` o `functions.php`)
        -   [ ] `auth.php` (Lógica de autenticación y roles). (Lógica dispersa, podría centralizarse)
        -   [x] `localization.php` (Funciones para manejo de idiomas y carga de textos).
        -   [ ] `senior_admin_logic.php` (Contendrá la lógica y reglas del Asistente Virtual SeniorAdmin).
    -   `/assets` (Recursos estáticos: `/css`, `/js`, `/images`, `/fonts`)
        -   [x] `assets/css/style.css` creado.
    -   `/templates` (Plantillas HTML comunes: `header.php`, `footer.php`, `email_templates/`, etc.)
        -   [x] `header.php`, `footer.php` creados.
    -   [ ] `/api` (Futuro: Endpoints para la app móvil, ej. `/v1/`)
    -   [ ] `/logs` (Para logs de errores de PHP, y logs de SeniorAdmin IA, fuera del document root si es posible)
    -   [ ] `/uploads` (Para archivos subidos por usuarios, ej. logos de equipos, fuera del document root o con acceso restringido)
    -   `/languages` (Archivos de idioma: `es.php`, `en.php`, `fr.php`, `pt.php`)
        -   [x] `es.php`, `en.php` creados. `fr.php`, `pt.php` creados como stubs.
    -   [ ] `/cron_jobs` (Scripts para tareas programadas, ej. `procesar_contribuciones_ia.php`)

**0.2. Conexión Segura a la Base de Datos y Definición de Tablas**

-   [ ] Crear `includes/db_config.php` (idealmente fuera de `public_html`) con credenciales de BD. (Credenciales en `config.php`)
-   [x] Desarrollar `includes/database.php` con conexión PDO.
-   [x] Creación/Adaptación de Tablas en la Base de Datos (SQL DDL):
    -   [x] Tabla `usuarios` (id_usuario, nombre_usuario, email, password_hash, rol ('superadmin', 'senior_admin_ia', 'editor', 'registrado'), puntos, idioma_interfaz_preferido, fecha_registro, ultimo_login, activo, token_verificacion_email, email_verificado, token_reset_password, fecha_expiracion_token_reset, fecha_ultima_actividad). (Hemos implementado los campos esenciales: id, username, email, password_hash, role, is_active, created_at, updated_at. Faltan muchos de los campos detallados aquí).
    -   [ ] Tabla `confederaciones` (...)
    -   [ ] Tabla `paises` (...)
    -   [ ] Tabla `regiones` (...)
    -   [ ] Tabla `competiciones` (...)
    -   [ ] Tabla `equipos` (...)
    -   [ ] Tabla `partidos` (...)
    -   [ ] Tabla `contribuciones` (...)
    -   [ ] Tabla `editor_permisos_seccion` (...)
    -   [ ] Tabla `log_actividad_admin` (...)
    -   [ ] (Opcional) Tabla `log_puntos` (...)
-   [ ] Documentar el esquema final de la BD (diagrama ERD y descripción de tablas/campos).
-   [ ] Cargar los datos existentes de las tablas rsssf_... en las nuevas tablas renombradas (competiciones, partidos), realizando las adaptaciones de datos necesarias.

**0.3. Página de “En Construcción”**

-   [ ] Crear `en_construccion.html` multilingüe en `public_html`.
-   [ ] Configurar `index.php` o `.htaccess` para mostrarla. (No aplica actualmente ya que tenemos un `index.php` funcional)

**0.4. Diseño y Experiencia de Usuario (Consideraciones Iniciales de Monetización)**

-   [ ] (M) Durante el diseño inicial de wireframes/mockups, identificar visualmente las ubicaciones para los 2 anuncios nativos (AdSense) permitidos por página (header, footer, sidebars, in-content), asegurando que no comprometan la usabilidad ni el diseño "rompedor".
-   [ ] (M) Definir cómo se adaptarán estas ubicaciones de anuncios en la versión móvil.

---
### Fase 1: Sistema de Usuarios y Autenticación

**1.0. Preparación del Sistema de Idiomas y Sesiones**

-   [x] Desarrollar `includes/localization.php` (detectar/establecer idioma, función `__()`).
-   [x] Crear archivos base de idioma (`languages/es.php`, `en.php`, `fr.php`, `pt.php`). (fr, pt son placeholders)
-   [x] Desarrollar `includes/session.php` (inicio seguro, manejo de variables, CSRF tokens). (Manejo básico de sesión implementado, CSRF no explícitamente).

**1.1. Registro, Login y Logout de Usuarios**

-   [x] Registro: Formulario (`registro.php` con CAPTCHA - CAPTCHA no implementado), script de procesamiento (`registro.php` mismo archivo, con validación, hash de contraseña, inserción en BD con rol 'registrado', envío de email de verificación - envío de email no implementado). (Parcialmente Completado)
-   [x] Login: Formulario (`login.php`), script de procesamiento (`login.php` mismo archivo, con validación, `password_verify()`, creación de sesión, actualización `ultimo_login` - `ultimo_login` no implementado). (Parcialmente Completado)
-   [x] Logout: Script (`logout.php`) para destruir sesión.
-   [ ] Verificación de Email: Script (`verificar_email.php`) para validar token y activar cuenta.
-   [ ] Recuperación de Contraseña: Formularios y scripts para solicitar y procesar reseteo.

**1.2. Gestión de Roles y Permisos (Lógica Base)**

-   [x] Desarrollar `includes/auth.php` (funciones `is_logged_in()`, `get_user_role()`, `has_permission()`, `check_editor_permission()`). (`is_logged_in()` existe, `get_user_role()` implícito en `$_SESSION['user_role']`. El resto no). (Parcialmente Completado)
-   [ ] Implementar lógica de redirección basada en permisos.
-   [x] Crear el usuario SuperAdmin (jmfr65) manualmente en BD con rol 'superadmin'. (Lo hiciste tú).
-   [ ] (Opcional) Crear un usuario placeholder `senior_admin_ia` en BD con rol 'senior_admin_ia' (...)

**1.3. Sistema de Puntos/Logros Básico**

-   [ ] Crear función `add_points($user_id, $points, $reason)` (actualizar `usuarios.puntos` y opcional `log_puntos`).
-   [ ] Integrar `add_points()` para registro y verificación de email.
-   [ ] (Diseño) Definir dónde mostrar los puntos del usuario.
-   [ ] (Planificación) Listar todas las acciones futuras que otorgarán puntos (según enfoque fútbol discutido).

---
*(El resto de las fases (2, 3, 4, 5, 6) y Consideraciones Adicionales quedan pendientes, ya que aún no hemos abordado esas tareas).*
---
